<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建自己的chatgpt网页版</title>
    <link href="/posts/60861/"/>
    <url>/posts/60861/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">PS: 如果想不使用科学上网就可以访问到需要有国内域名</p><h1 id="申请OpenAI账号"><a href="#申请OpenAI账号" class="headerlink" title="申请OpenAI账号"></a>申请OpenAI账号</h1><p>要申请OpenAI账号，您需要按照以下步骤进行操作：</p><ol><li>首先，您需要科学上网以便访问OpenAI的官方网站。</li><li>准备一个Gmail或Outlook账号，用于注册OpenAI账号。</li><li>在注册过程中，您将需要进行手机短信验证码验证。您可以使用接码平台<a href="https://sms-activate.org/">sms-activate</a>来获取验证码。</li><li>完成账号注册后，您就可以免费使用ChatGPT 3.5进行对话了。请注意，使用ChatGPT 3.5需要一直保持科学上网。</li></ol><h1 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h1><h2 id="ChatGPT-Next-Web"><a href="#ChatGPT-Next-Web" class="headerlink" title="ChatGPT-Next-Web"></a>ChatGPT-Next-Web</h2><p>您可以使用<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">ChatGPT-Next-Web</a>来进行Vercel部署。按照以下步骤操作：</p><ol><li>首先，前往<a href="https://github.com/Yidadaa/ChatGPT-Next-Web#get-started">这个链接</a>获取如何使用ChatGPT-Next-Web的详细说明。</li><li>在部署时，您需要设置两个环境变量。第一个是<code>OPENAI_API_KEY</code>，您可以在<a href="https://platform.openai.com/account/api-keys">OpenAI官方网站</a>获取该API密钥。第二个是<code>CODE</code>，这是页面上设置的登录码。只有在输入正确的登录码后，才能进行请求。这是为了防止过度请求<code>tokens</code>。</li></ol><h1 id="设置域名"><a href="#设置域名" class="headerlink" title="设置域名"></a>设置域名</h1><p>目前Vercel部署后的域名不能直接连接，但如果您拥有自己的域名，您可以通过配置域名来使用自己的域名进行访问。</p>]]></content>
    
    
    <categories>
      
      <category>ChatGpt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ChatGpt</tag>
      
      <tag>ChatGpt-nex-web</tag>
      
      <tag>Vercel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python项目离线部署</title>
    <link href="/posts/38532/"/>
    <url>/posts/38532/</url>
    
    <content type="html"><![CDATA[<div class="admonition warning"><p class="admonition-title">注意</p><p>打包环境的python、pip版本和系统架构应和部署环境保持一致，即在windows上下载的包不能在linux上使用，pip低版本不能使用pip高版本的包。 可以使用<code>pip debug -verbose</code>查看pip安装允许的包后缀类型</p></div><h1 id="venv-虚拟环境"><a href="#venv-虚拟环境" class="headerlink" title="venv 虚拟环境"></a>venv 虚拟环境</h1><p>首先我们需要一个虚拟环境，虚拟环境可以让我们只安装需要的依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -m venv venv<br></code></pre></td></tr></table></figure><p>如果是使用PyCharm创建的python项目，已经创建好了venv</p><h1 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip freeze &gt; requirements.txt<br></code></pre></td></tr></table></figure><p>将当前python环境的安装包信息保存到requirements.txt文件</p><h1 id="pip-download"><a href="#pip-download" class="headerlink" title="pip download"></a>pip download</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">下载requirements.txt中的依赖包到packages目录下，使用清华镜像</span><br>pip download -d ./packages -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><h1 id="pip-install"><a href="#pip-install" class="headerlink" title="pip install"></a>pip install</h1><p>把packages目录上传到服务器，安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install -r requirements.txt --no-index -f packages<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python部署</tag>
      
      <tag>pip使用</tag>
      
      <tag>requirements</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux常用命令</title>
    <link href="/posts/30335/"/>
    <url>/posts/30335/</url>
    
    <content type="html"><![CDATA[<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">useradd username<br></code></pre></td></tr></table></figure><h2 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">passwd username<br></code></pre></td></tr></table></figure><h2 id="修改文件夹用户权限"><a href="#修改文件夹用户权限" class="headerlink" title="修改文件夹用户权限"></a>修改文件夹用户权限</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chown -R username:userGroup dir/<br></code></pre></td></tr></table></figure><h2 id="查看服务器内存"><a href="#查看服务器内存" class="headerlink" title="查看服务器内存"></a>查看服务器内存</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">free -h<br></code></pre></td></tr></table></figure><h2 id="查看服务器磁盘使用"><a href="#查看服务器磁盘使用" class="headerlink" title="查看服务器磁盘使用"></a>查看服务器磁盘使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">df -h<br></code></pre></td></tr></table></figure><h2 id="安装zip"><a href="#安装zip" class="headerlink" title="安装zip"></a>安装zip</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y unzip zip<br></code></pre></td></tr></table></figure><h2 id="打包文件"><a href="#打包文件" class="headerlink" title="打包文件"></a>打包文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -czvf /path/to/archive.tar.gz /path/to/directory<br></code></pre></td></tr></table></figure><h2 id="解压文件"><a href="#解压文件" class="headerlink" title="解压文件"></a>解压文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">-C 指定解压的目录</span><br>tar -C /extract/to/path -xzvf /path/to/archive.tar.gz<br><br>unzip test.zip<br></code></pre></td></tr></table></figure><p>To be continued</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>springboot打包zip</title>
    <link href="/posts/27600/"/>
    <url>/posts/27600/</url>
    
    <content type="html"><![CDATA[<h1 id="Spring-boot-打包成zip"><a href="#Spring-boot-打包成zip" class="headerlink" title="Spring boot 打包成zip"></a>Spring boot 打包成zip</h1><p>官方文档：<a href="https://maven.apache.org/plugins/maven-assembly-plugin/#apache-maven-assembly-plugin">apache-maven-assembly-plugin</a></p><p>assembly 是一个maven插件，可以将项目构建包，依赖，模块，文档以及其它文件合并到一个单文件中。<br>assembly 的配置称为<code>descriptor</code>，按照描述文件的配置工作，可以使用assembly内置的几种配置，处理了许多常用操作，比如打包项目工件以及项目文档到一个zip文件中。或者可以为项目配置自定义的配置来设置在assembly中如何控制依赖，模块和其它文件打包。</p><p>支持的打包类型</p><ul><li>zip</li><li>tar</li><li>tar.gz (or tgz)</li><li>tar.bz2 (or tbz2)</li><li>tar.snappy</li><li>tar.xz (or txz)</li><li>tar.zst (or tzst)</li><li>jar</li><li>dir</li><li>war</li><li>and any other format that the ArchiveManager has been configured for</li></ul><p>要使用assembly插件，如果要使用预定义的配置，需要在<code>&lt;descriptorRefs&gt;&lt;descriptorRefs&gt;</code>参数中设置配置，如果要使用自定义配置，需要在<code>&lt;descriptors&gt;&lt;/descriptors&gt;</code>参数中设置配置文件的路径。</p><p>例如，如果你的项目最终构建是一个<code>jar</code>文件，想要包含所有的项目依赖，可以使用assembly的内置配置，在<code>pom.xml</code>添加插件配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">descriptorRefs</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">descriptorRef</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">descriptorRefs</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p><code>assembly</code>允许一次指定多个<code>descriptorRef</code>，来生成多种类型的组件。<br><code>descriptorRef</code> 可选值有 <code>jar-with-dependencies</code>、<code>bin</code>、<code>src</code>、<code>project</code>，具体文档参考<a href="https://maven.apache.org/plugins/maven-assembly-plugin/descriptor-refs.html">descriptor-refs</a></p></blockquote><p>或者我们想要创建一个自定义的组装描述文件，可以这样使用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">descriptors</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">descriptor</span>&gt;</span>src/assembly/assembly.xml<span class="hljs-tag">&lt;/<span class="hljs-name">descriptor</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">descriptors</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>assembly.xml</code>:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">assembly</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/ASSEMBLY/2.2.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/ASSEMBLY/2.2.0 https://maven.apache.org/xsd/assembly-2.2.0.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>make-assembly<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">formats</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span>zip<span class="hljs-tag">&lt;/<span class="hljs-name">format</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">format</span>&gt;</span>tar.gz<span class="hljs-tag">&lt;/<span class="hljs-name">format</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">formats</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">fileSets</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">fileSet</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>$&#123;project.basedir&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>README*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>LICENSE*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>NOTICE*<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">fileSet</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">fileSet</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>$&#123;project.build.directory&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">outputDirectory</span>&gt;</span>bin<span class="hljs-tag">&lt;/<span class="hljs-name">outputDirectory</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>*.jar<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">fileSet</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fileSets</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">assembly</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当我们配置好需要的描述文件之后，是时候进行构建了。我们需要将<code>assembly</code>的执行加入到项目的构建周期上，添加以下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">descriptors</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">descriptor</span>&gt;</span>src/assembly/assembly.xml<span class="hljs-tag">&lt;/<span class="hljs-name">descriptor</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">descriptors</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>assembly<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--    绑定到package阶段    --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>single<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置好以后，当我们执行 <code>mvn package</code>的时候，assembly 将会在package之后执行，根据<code>assembly.xml</code>中的配置，打包zip和tar.gz文件</p>]]></content>
    
    
    <categories>
      
      <category>Sprint Boot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot</tag>
      
      <tag>maven-assembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
